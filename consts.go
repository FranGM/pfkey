package pfkey

// Most of the following are taken from rfc2367
// http://lxr.free-electrons.com/source/include/uapi/linux/pfkeyv2.h

// WORD_SIZE is set to 64-bit words to follow rfc2367, which defined everything as being 64-bit aligned.
const WORD_SIZE = 8

// As defined in rfc2367
const (
	PF_KEY_V2 = 2
)

// SADB Struct sizes
const (
	SADBMSG_LEN       = 2
	SADBSA_LEN        = 2
	SADBLIFETIME_LEN  = 4
	SADBADDRESS_LEN   = 1
	SADBKEY_LEN       = 1
	SADBIDENT_LEN     = 2
	SADBSENS_LEN      = 2
	SADBPROP_LEN      = 1
	SADBCOMB_LEN      = 9
	SADBSUPPORTED_LEN = 1
	SADBALG_LEN       = 1
	SADBSPIRANGE_LEN  = 2
	SADBXPOLICY_LEN   = 2
)

// Other struct sizes
const (
	SOCKADDRIN_LEN = 2
)

// SADB SA types
const (
	SADB_SATYPE_UNSPEC   = 0
	SADB_SATYPE_AH       = 2
	SADB_SATYPE_ESP      = 3
	SADB_SATYPE_RSVP     = 5
	SADB_SATYPE_OSPFV2   = 6
	SADB_SATYPE_RIPV2    = 7
	SADB_SATYPE_MIP      = 8
	SADB_X_SATYPE_IPCOMP = 9
	SADB_SATYPE_MAX      = 9
)

// SADB Message types
const (
	SADB_RESERVED = iota
	SADB_GETSPI
	SADB_UPDATE
	SADB_ADD
	SADB_DELETE
	SADB_GET
	SADB_ACQUIRE
	SADB_REGISTER
	SADB_EXPIRE
	SADB_FLUSH
	SADB_DUMP
	SADB_X_PROMISC
	SADB_X_PCHANGE
	SADB_X_SPDUPDATE
	SADB_X_SPDADD
	SADB_X_SPDDELET
	SADB_X_SPDGET
	SADB_X_SPDACQUIRE
	SADB_X_SPDDUMP
	SADB_X_SPDFLUSH
	SADB_X_SPDSETID
	SADB_X_SPDEXPIRE
	SADB_X_SPDDELETE2
	SADB_X_NAT_T_NEW_MAPPING
	SADB_X_MIGRATE
	SADB_MAX = 24
)

// SADB extension types
const (
	SADB_EXT_RESERVED = iota
	SADB_EXT_SA
	SADB_EXT_LIFETIME_CURRENT
	SADB_EXT_LIFETIME_HARD
	SADB_EXT_LIFETIME_SOFT
	SADB_EXT_ADDRESS_SRC
	SADB_EXT_ADDRESS_DST
	SADB_EXT_ADDRESS_PROXY
	SADB_EXT_KEY_AUTH
	SADB_EXT_KEY_ENCRYPT
	SADB_EXT_IDENTITY_SRC
	SADB_EXT_IDENTITY_DST
	SADB_EXT_SENSITIVITY
	SADB_EXT_PROPOSAL
	SADB_EXT_SUPPORTED_AUTH
	SADB_EXT_SUPPORTED_ENCRYPT
	SADB_EXT_SPIRANGE
	SADB_X_EXT_KMPRIVATE
	SADB_X_EXT_POLICY
	SADB_X_EXT_SA2
)

// SA STATES
const (
	SADB_SASTATE_LARVAL = iota
	SADB_SASTATE_MATURE
	SADB_SASTATE_DYING
	SADB_SASTATE_DEAD
)

// Encryption algorithms
const (
	SADB_EALG_NONE            = 0
	SADB_EALG_DESCBC          = 2
	SADB_EALG_3DESCBC         = 3
	SADB_X_EALG_CASTCBC       = 6
	SADB_X_EALG_BLOWFISHCBC   = 7
	SADB_EALG_NULL            = 11
	SADB_X_EALG_AESCBC        = 12
	SADB_X_EALG_AESCTR        = 13
	SADB_X_EALG_AES_CCM_ICV8  = 14
	SADB_X_EALG_AES_CCM_ICV12 = 15
	SADB_X_EALG_AES_CCM_ICV16 = 16
	SADB_X_EALG_AES_GCM_ICV8  = 18
	SADB_X_EALG_AES_GCM_ICV12 = 19
	SADB_X_EALG_AES_GCM_ICV16 = 20
	SADB_X_EALG_CAMELLIACBC   = 22
	SADB_X_EALG_NULL_AES_GMAC = 23
	SADB_EALG_MAX             = 253
)

// Authentication Algorithms
const (
	SADB_AALG_NONE            = 0
	SADB_AALG_MD5HMAC         = 2
	SADB_AALG_SHA1HMAC        = 3
	SADB_X_AALG_SHA2_256HMAC  = 5
	SADB_X_AALG_SHA2_384HMAC  = 6
	SADB_X_AALG_SHA2_512HMAC  = 7
	SADB_X_AALG_RIPEMD160HMAC = 8
	SADB_X_AALG_AES_XCBC_MAC  = 9
	SADB_X_AALG_NULL          = 251
	SADB_AALG_MAX             = 251
)

// Compression algorithms
const (
	SADB_X_CALG_NONE    = 0
	SADB_X_CALG_OUI     = 1
	SADB_X_CALG_DEFLATE = 2
	SADB_X_CALG_LZS     = 3
	SADB_X_CALG_LZJH    = 4
	SADB_X_CALG_MAX     = 4
)

const (
	spiRangeMin = 10
	spiRangeMax = 10000000
)
